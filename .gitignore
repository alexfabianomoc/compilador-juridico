# Compilador Jurídico Web - .gitignore

# ==========================================
# DIRETÓRIOS ESPECÍFICOS DA APLICAÇÃO
# ==========================================

# Flask Instance folder (dados temporários)
instance/
instance/flask_session/
instance/pdf_output/
instance/app.log
instance/*.log

# Cache da aplicação (dados temporários de consultas)
assets/cache/*.json
assets/cache/

# Ambiente virtual
.venv/
env/
.env/


# ==========================================
# PYTHON
# ==========================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.pyc
*.pyo
*.pyd
.Python

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Flask stuff:
.flaskenv
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==========================================
# SISTEMA OPERACIONAL
# ==========================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ==========================================
# EDITORES E IDEs
# ==========================================

# VSCode
.vscode/
*.code-workspace
.history/

# PyCharm
.idea/
*.iws
*.iml
*.ipr
.idea_modules/

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Vim
*~
*.swp
*.swo
*~
Session.vim
.netrwhist
tags

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ==========================================
# LOGS E ARQUIVOS TEMPORÁRIOS
# ==========================================

# Logs gerais
*.log
logs/
log/

# Arquivos temporários
*.tmp
*.temp
*.bak
*.backup
*.old
*.orig

# Arquivos de lock
*.lock
.lock

# ==========================================
# ARQUIVOS SENSÍVEIS
# ==========================================

# Variáveis de ambiente
.env
.env.local
.env.*.local
.env.production
.env.development

# Configurações locais
config.local.py
local_settings.py

# Chaves e certificados
*.key
*.pem
*.crt
*.cer
*.p12
*.pfx

# Base de dados local (se usar)
*.db
*.sqlite
*.sqlite3

# ==========================================
# DOCUMENTAÇÃO GERADA
# ==========================================

# Sphinx docs
docs/_build/
docs/build/

# ==========================================
# OUTROS
# ==========================================

# Node modules (se houver JavaScript)
node_modules/

# Arquivos comprimidos
*.zip
*.tar.gz
*.rar
*.7z